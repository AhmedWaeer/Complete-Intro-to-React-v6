{"componentChunkName":"component---src-templates-lesson-template-js","path":"/managing-state-in-class-components","result":{"data":{"markdownRemark":{"html":"<p>Okay, so on this page, notice first we have a loading indicator (this one isn't nice looking but you could put some effort into it if you wanted.) This is a good idea while you're waiting for data to load.</p>\n<p>Let's make a nice photo carousel of the pictures for the animal now. Make a new file called Carousel.js:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Carousel</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    active<span class=\"token operator\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">static</span> defaultProps <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    images<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"https://petapiv2.blob.core.windows.net/pets/none.jpg\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> active <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> images <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"carousel\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>images<span class=\"token punctuation\">[</span>active<span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span> alt<span class=\"token operator\">=</span><span class=\"token string\">\"animal\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"carousel-smaller\"</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">{</span>images<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">photo<span class=\"token punctuation\">,</span> index</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">(</span>\n            <span class=\"token comment\">// eslint-disable-next-line</span>\n            <span class=\"token operator\">&lt;</span>img\n              key<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photo<span class=\"token punctuation\">}</span>\n              src<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>photo<span class=\"token punctuation\">}</span>\n              className<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index <span class=\"token operator\">===</span> active <span class=\"token operator\">?</span> <span class=\"token string\">\"active\"</span> <span class=\"token operator\">:</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">}</span>\n              alt<span class=\"token operator\">=</span><span class=\"token string\">\"animal thumbnail\"</span>\n            <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n          <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Carousel<span class=\"token punctuation\">;</span></code></pre></div>\n<p>Add the Carousel component to the Detail page.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// import at top</span>\n<span class=\"token keyword\">import</span> Carousel <span class=\"token keyword\">from</span> <span class=\"token string\">\"./Carousel\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// at top of Details function</span>\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animal<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> city<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> images <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// first component inside div.details</span>\n<span class=\"token operator\">&lt;</span>Carousel images<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>images<span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>defaultProps does exactly what it sounds like: it allows you to set props that a component has by default if they're not furnished by parent. That way we don't have to do detection logic and can just assume they're always there.</li>\n</ul>\n<p>Let's make it so we can react to someone changing the photo on the carousel.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// add event listener</span>\n  <span class=\"token function-variable function\">handleIndexClick</span> <span class=\"token operator\">=</span> <span class=\"token parameter\">event</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      active<span class=\"token operator\">:</span> <span class=\"token operator\">+</span>event<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>index\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// above img</span>\n<span class=\"token comment\">// eslint-disable-next-line</span>\n\n<span class=\"token comment\">// add to img</span>\nonClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>handleIndexClick<span class=\"token punctuation\">}</span>\ndata<span class=\"token operator\">-</span>index<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>index<span class=\"token punctuation\">}</span></code></pre></div>\n<ul>\n<li>This is how you handle events in React class components. If it was keyboard handler, you'd do an onChange or onKeyUp, etc. handler.</li>\n<li>Notice that the handleIndexClick function is an arrow function. This is because we need the <code class=\"language-text\">this</code> in <code class=\"language-text\">handleIndexClick</code> to be the correct <code class=\"language-text\">this</code>. An arrow function assures that because it will be the scope of where it was defined. This is common with how to deal with event handlers with class components.</li>\n<li>The data attribute comes back as a string. We want it to be a number, hence the <code class=\"language-text\">+</code>.</li>\n<li>We're doing bad accessibility stuff. But this makes it a lot simpler for learning for now. But don't do this in production.</li>\n</ul>\n<blockquote>\n<p>🏁 <a href=\"https://github.com/btholt/citr-v6-project/tree/master/09-managing-state-in-class-components\">Click here to see the state of the project up until now: 09-managing-state-in-class-components</a></p>\n</blockquote>","frontmatter":{"path":"/managing-state-in-class-components","title":"Managing State in Class Components","order":"5D","section":"React Capabilities","description":"Class components work a little different from hooks in terms of marshalling state. Brian teaches you how to manage your state using setState and life cycle methods."}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"3F","path":"/babel","title":"Babel"}}},{"node":{"frontmatter":{"order":"3G","path":"/browserlist","title":"Browserlist"}}},{"node":{"frontmatter":{"order":"5B","path":"/class-components","title":"Class Components"}}},{"node":{"frontmatter":{"order":"5C","path":"/class-properties","title":"Class Properties"}}},{"node":{"frontmatter":{"order":"4F","path":"/component-composition","title":"Component Composition"}}},{"node":{"frontmatter":{"order":"2B","path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":"6B","path":"/context","title":"Context"}}},{"node":{"frontmatter":{"order":"4D","path":"/custom-hooks","title":"Custom Hooks"}}},{"node":{"frontmatter":{"order":"6A","path":"/error-boundaries","title":"Error Boundaries"}}},{"node":{"frontmatter":{"order":"3C","path":"/eslint","title":"ESLint"}}},{"node":{"frontmatter":{"order":"3D","path":"/git","title":"Git"}}},{"node":{"frontmatter":{"order":"4E","path":"/handling-user-input","title":"Handling User Input"}}},{"node":{"frontmatter":{"order":"4B","path":"/hooks","title":"Hooks"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"4A","path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":"5D","path":"/managing-state-in-class-components","title":"Managing State in Class Components"}}},{"node":{"frontmatter":{"order":"3A","path":"/npm","title":"npm"}}},{"node":{"frontmatter":{"order":"3E","path":"/parcel","title":"Parcel"}}},{"node":{"frontmatter":{"order":"3B","path":"/prettier","title":"Prettier"}}},{"node":{"frontmatter":{"order":"2A","path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":"5A","path":"/react-router","title":"React Router"}}},{"node":{"frontmatter":{"order":"4C","path":"/useeffect","title":"useEffect"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}