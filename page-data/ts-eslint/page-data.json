{"componentChunkName":"component---src-templates-lesson-template-js","path":"/ts-eslint","result":{"data":{"markdownRemark":{"html":"<h2 id=\"todo-start-here\" style=\"position:relative;\"><a href=\"#todo-start-here\" aria-label=\"todo start here permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TODO start here</h2>\n<p>Let's take the time now to migrate from ESLint to TSLint. TypeScript has its own linter that it uses and it's helpful to have those additional rules.</p>\n<ol>\n<li>Run <code class=\"language-text\">npm uninstall @babel/eslint-parser</code></li>\n<li>Run <code class=\"language-text\">npm install -D eslint-import-resolver-typescript@2.4.0 @typescript-eslint/eslint-plugin@4.16.1 @typescript-eslint/parser@4.16.1</code></li>\n<li>Change your package.json lint entry to <code class=\"language-text\">&quot;lint&quot;: &quot;eslint \\&quot;src/**/*.{js,jsx,ts,tsx}\\&quot; --quiet&quot;,</code></li>\n<li>Add the following to .eslintrc.json</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// inside extends, above prettier rules</span>\n<span class=\"token string\">\"plugin:@typescript-eslint/recommended\"</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// inside rules, generally a good rule but we're going to disable it for now</span>\n<span class=\"token property\">\"@typescript-eslint/no-empty-function\"</span><span class=\"token operator\">:</span> <span class=\"token number\">0</span>\n\n<span class=\"token comment\">// inside plugins</span>\n<span class=\"token string\">\"@typescript-eslint\"</span>\n\n<span class=\"token comment\">// replace parser</span>\n<span class=\"token property\">\"parser\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"@typescript-eslint/parser\"</span><span class=\"token punctuation\">,</span>\n\n<span class=\"token comment\">// add to settings array</span>\n<span class=\"token property\">\"import/parsers\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"@typescript-eslint/parser\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\".ts\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".tsx\"</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token property\">\"import/resolver\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token property\">\"typescript\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"alwaysTryTypes\"</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Now you're linting as well as type checking! This added a few new TypeScript-specific rules as well. <a href=\"https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/eslint-plugin#supported-rules\">Check those out here.</a>.</p>\n<p>Now if you run <code class=\"language-text\">npm run lint</code> you shouldn't see any type errors. But let's take this a step further: let's <em>enforce</em> type checking. This means we won't unchecked TypeScript in our codebase. This is something you'd turn on once <em>everything</em> is converted to TypeScript, otherwise it'll be very noisy. Since we're doing all the conversion now, let's add it now.</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token comment\">// under plugin:@typescript-eslint/recommended</span>\n<span class=\"token string\">\"plugin:@typescript-eslint/recommended-requiring-type-checking\"</span><span class=\"token punctuation\">,</span></code></pre></div>\n<p>Now run <code class=\"language-text\">npm run lint</code> and marvel at all the stuff we get to fix!</p>\n<blockquote>\n<p>üèÅ <a href=\"https://github.com/btholt/citr-v6-project/tree/master/typescript-1\">Click here to see the state of the project up until now: typescript-1</a></p>\n</blockquote>","frontmatter":{"path":"/ts-eslint","title":"TypeScript + ESLint","order":"13B","section":"TypeScript","description":""}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"3F","path":"/babel","title":"Babel"}}},{"node":{"frontmatter":{"order":"3G","path":"/browserlist","title":"Browserlist"}}},{"node":{"frontmatter":{"order":"5B","path":"/class-components","title":"Class Components"}}},{"node":{"frontmatter":{"order":"5C","path":"/class-properties","title":"Class Properties"}}},{"node":{"frontmatter":{"order":"11A","path":"/code-splitting","title":"Code Splitting"}}},{"node":{"frontmatter":{"order":"4F","path":"/component-composition","title":"Component Composition"}}},{"node":{"frontmatter":{"order":"2B","path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":"7A","path":"/conclusion","title":"Conclusion of Complete Intro to React"}}},{"node":{"frontmatter":{"order":"6B","path":"/context","title":"Context"}}},{"node":{"frontmatter":{"order":"4D","path":"/custom-hooks","title":"Custom Hooks"}}},{"node":{"frontmatter":{"order":"6A","path":"/error-boundaries","title":"Error Boundaries"}}},{"node":{"frontmatter":{"order":"3C","path":"/eslint","title":"ESLint"}}},{"node":{"frontmatter":{"order":"3D","path":"/git","title":"Git"}}},{"node":{"frontmatter":{"order":"4E","path":"/handling-user-input","title":"Handling User Input"}}},{"node":{"frontmatter":{"order":"4B","path":"/hooks","title":"Hooks"}}},{"node":{"frontmatter":{"order":"8A","path":"/intermediate-react-v3","title":"Welcome"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"4A","path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":"5D","path":"/managing-state-in-class-components","title":"Managing State in Class Components"}}},{"node":{"frontmatter":{"order":"3A","path":"/npm","title":"npm"}}},{"node":{"frontmatter":{"order":"3E","path":"/parcel","title":"Parcel"}}},{"node":{"frontmatter":{"order":"6C","path":"/portals-and-refs","title":"Portals and Refs"}}},{"node":{"frontmatter":{"order":"3B","path":"/prettier","title":"Prettier"}}},{"node":{"frontmatter":{"order":"2A","path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":"4G","path":"/react-dev-tools","title":"React Dev Tools"}}},{"node":{"frontmatter":{"order":"5A","path":"/react-router","title":"React Router"}}},{"node":{"frontmatter":{"order":"12A","path":"/server-side-rendering","title":"Server Side Rendering"}}},{"node":{"frontmatter":{"order":"12A","path":"/streaming-markup","title":"Streaming Markup"}}},{"node":{"frontmatter":{"order":"13C","path":"/ts-details","title":"Details"}}},{"node":{"frontmatter":{"order":"13B","path":"/ts-eslint","title":"TypeScript + ESLint"}}},{"node":{"frontmatter":{"order":"13A","path":"/ts-modal","title":"Modal"}}},{"node":{"frontmatter":{"order":"13B","path":"/ts-theme-context","title":"ThemeContext"}}},{"node":{"frontmatter":{"order":"9G","path":"/usecallback","title":"useCallback"}}},{"node":{"frontmatter":{"order":"9C","path":"/usecontext","title":"useContext"}}},{"node":{"frontmatter":{"order":"9J","path":"/usedebugvalue","title":"useDebugValue"}}},{"node":{"frontmatter":{"order":"9B","path":"/useeffect-2","title":"useEffect"}}},{"node":{"frontmatter":{"order":"4C","path":"/useeffect","title":"useEffect"}}},{"node":{"frontmatter":{"order":"9I","path":"/useimperativehandle","title":"useImperativeHandle"}}},{"node":{"frontmatter":{"order":"9H","path":"/uselayouteffect","title":"useLayoutEffect"}}},{"node":{"frontmatter":{"order":"9F","path":"/usememo","title":"useMemo"}}},{"node":{"frontmatter":{"order":"9E","path":"/usereducer","title":"useReducer"}}},{"node":{"frontmatter":{"order":"9D","path":"/useref","title":"useRef"}}},{"node":{"frontmatter":{"order":"9A","path":"/usestate","title":"useState"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}