{"componentChunkName":"component---src-templates-lesson-template-js","path":"/class-components","result":{"data":{"markdownRemark":{"html":"<p>This class has been showing you the latest APIs for React: hooks. Going forward, these sorts of components will be the default way of writing React going forward. However, the class API still has its uses and isn't going anywhere anytime soon. In this section we're going to go through and learn the basics of it since there's still a lot class code out in the wild and the new API can't do <em>everything</em> the old one can, so it's still useful in some cases.</p>\n<p>Let's go make Details.js as a class.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// replace Details.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Component <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> withRouter <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"react-router-dom\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Details</span> <span class=\"token keyword\">extends</span> <span class=\"token class-name\">Component</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">super</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> loading<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">async</span> <span class=\"token function\">componentDidMount</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fetch</span><span class=\"token punctuation\">(</span>\n      <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">https://pet-api-v2.azurewebsites.net/api/pets?id=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>props<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">.</span>params<span class=\"token punctuation\">.</span>id<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> json <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> res<span class=\"token punctuation\">.</span><span class=\"token function\">json</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span><span class=\"token function\">setState</span><span class=\"token punctuation\">(</span>Object<span class=\"token punctuation\">.</span><span class=\"token function\">assign</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> loading<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> json<span class=\"token punctuation\">.</span>pets<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token function\">render</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">.</span>loading<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span>loading … <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> animal<span class=\"token punctuation\">,</span> breed<span class=\"token punctuation\">,</span> city<span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">,</span> name <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>state<span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n      <span class=\"token operator\">&lt;</span>div className<span class=\"token operator\">=</span><span class=\"token string\">\"details\"</span><span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>h1<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h1<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>h2<span class=\"token operator\">></span><span class=\"token punctuation\">{</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>animal<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> — </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>breed<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> — </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>city<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">, </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>state<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h2<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>button<span class=\"token operator\">></span>Adopt <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n          <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token function\">withRouter</span><span class=\"token punctuation\">(</span>Details<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<ul>\n<li>Every class component extends <code class=\"language-text\">React.Component</code>. Every class component must have a render method that returns some sort of JSX / markup / call to <code class=\"language-text\">React.createElement</code>.</li>\n<li>Not every component needs to have a constructor. Many don't. I'll show you momentarily how you nearly never need to have one. In this case we need it to instantiate the state object (which we'll use instead of <code class=\"language-text\">useState</code>.) If you have a constructor, you <em>have</em> to do the <code class=\"language-text\">super(props)</code> to make sure that the props are passed up to React so React can keep track of them.</li>\n<li><code class=\"language-text\">componentDidMount</code> is a function that's called after the first rendering is completed. This pretty similar to a <code class=\"language-text\">useEffect</code> call that only calls the first time. This is typically where you want to do data fetching. It doesn't have to be async; we just made it async here to make the data fetching easy.</li>\n<li>\n<p>Notice instead of getting props via parameters and state via <code class=\"language-text\">useState</code> we're getting it from the instance variables <code class=\"language-text\">this.state</code> and <code class=\"language-text\">this.props</code>. This is how it works with class components. Neither one will you mutate directly.</p>\n<ul>\n<li><code class=\"language-text\">this.state</code> is the mutable state of the component (like useState). You'll use <code class=\"language-text\">this.setState</code> to mutate it (don't modify it directly.)</li>\n<li><code class=\"language-text\">this.props</code> comes from the parent component, similar to parameter given to the render functions that we pull props out of.</li>\n</ul>\n</li>\n<li><code class=\"language-text\">withRouter()</code> is called a higher order component and is a bit of an advance concept. Basically we're composing functionality into our component via react-router. Think of <code class=\"language-text\">useParams</code>: it mixes in functionality from react-router by calling a hook. This is how you get that custom hook behavior of mixing in library functionality with class components. Redux does this too, but otherwise it's not overly common.</li>\n</ul>","frontmatter":{"path":"/class-components","title":"Class Components","order":"5B","section":"React Capabilities","description":"While many components are written with hooks, the older API of class-based components are still around and still useful. Brian shows you when and how to use the class components API."}},"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"order":"14D","path":"/action-creators","title":"Action Creators"}}},{"node":{"frontmatter":{"order":"3F","path":"/babel","title":"Babel"}}},{"node":{"frontmatter":{"order":"15B","path":"/basic-react-testing","title":"Basic React Testing"}}},{"node":{"frontmatter":{"order":"3G","path":"/browserlist","title":"Browserlist"}}},{"node":{"frontmatter":{"order":"5B","path":"/class-components","title":"Class Components"}}},{"node":{"frontmatter":{"order":"5C","path":"/class-properties","title":"Class Properties"}}},{"node":{"frontmatter":{"order":"11A","path":"/code-splitting","title":"Code Splitting"}}},{"node":{"frontmatter":{"order":"4F","path":"/component-composition","title":"Component Composition"}}},{"node":{"frontmatter":{"order":"2B","path":"/components","title":"Components"}}},{"node":{"frontmatter":{"order":"7A","path":"/conclusion","title":"Conclusion of Complete Intro to React"}}},{"node":{"frontmatter":{"order":"6B","path":"/context","title":"Context"}}},{"node":{"frontmatter":{"order":"4D","path":"/custom-hooks","title":"Custom Hooks"}}},{"node":{"frontmatter":{"order":"14F","path":"/dispatching-actions","title":"Dispatching Actions"}}},{"node":{"frontmatter":{"order":"6A","path":"/error-boundaries","title":"Error Boundaries"}}},{"node":{"frontmatter":{"order":"3C","path":"/eslint","title":"ESLint"}}},{"node":{"frontmatter":{"order":"3D","path":"/git","title":"Git"}}},{"node":{"frontmatter":{"order":"4E","path":"/handling-user-input","title":"Handling User Input"}}},{"node":{"frontmatter":{"order":"4B","path":"/hooks","title":"Hooks"}}},{"node":{"frontmatter":{"order":"8A","path":"/intermediate-react-v3","title":"Welcome"}}},{"node":{"frontmatter":{"order":"1A","path":"/intro","title":"Introduction"}}},{"node":{"frontmatter":{"order":"4A","path":"/jsx","title":"JSX"}}},{"node":{"frontmatter":{"order":"5D","path":"/managing-state-in-class-components","title":"Managing State in Class Components"}}},{"node":{"frontmatter":{"order":"15D","path":"/mocks","title":"Mocks"}}},{"node":{"frontmatter":{"order":"3A","path":"/npm","title":"npm"}}},{"node":{"frontmatter":{"order":"3E","path":"/parcel","title":"Parcel"}}},{"node":{"frontmatter":{"order":"6C","path":"/portals-and-refs","title":"Portals and Refs"}}},{"node":{"frontmatter":{"order":"3B","path":"/prettier","title":"Prettier"}}},{"node":{"frontmatter":{"order":"14E","path":"/providers","title":"Providers"}}},{"node":{"frontmatter":{"order":"2A","path":"/pure-react","title":"Pure React"}}},{"node":{"frontmatter":{"order":"4G","path":"/react-dev-tools","title":"React Dev Tools"}}},{"node":{"frontmatter":{"order":"5A","path":"/react-router","title":"React Router"}}},{"node":{"frontmatter":{"order":"14B","path":"/reducers","title":"Reducers"}}},{"node":{"frontmatter":{"order":"14G","path":"/redux-dev-tools","title":"Redux Dev Tools"}}},{"node":{"frontmatter":{"order":"14A","path":"/redux-getting-started","title":"Getting Started"}}},{"node":{"frontmatter":{"order":"12A","path":"/server-side-rendering","title":"Server Side Rendering"}}},{"node":{"frontmatter":{"order":"15E","path":"/snapshots","title":"Snapshots"}}},{"node":{"frontmatter":{"order":"12A","path":"/streaming-markup","title":"Streaming Markup"}}},{"node":{"frontmatter":{"order":"15A","path":"/testing-react","title":"Intro to Testing React"}}},{"node":{"frontmatter":{"order":"15C","path":"/testing-ui-interactions","title":"Testing UI Interactions"}}},{"node":{"frontmatter":{"order":"13K","path":"/ts-app","title":"App"}}},{"node":{"frontmatter":{"order":"13F","path":"/ts-carousel","title":"Carousel"}}},{"node":{"frontmatter":{"order":"13D","path":"/ts-details","title":"Details"}}},{"node":{"frontmatter":{"order":"13E","path":"/ts-error-boundary","title":"ErrorBoundary"}}},{"node":{"frontmatter":{"order":"13B","path":"/ts-eslint","title":"TypeScript + ESLint"}}},{"node":{"frontmatter":{"order":"13A","path":"/ts-modal","title":"Modal"}}},{"node":{"frontmatter":{"order":"13G","path":"/ts-pet","title":"Pet"}}},{"node":{"frontmatter":{"order":"13J","path":"/ts-results","title":"Results"}}},{"node":{"frontmatter":{"order":"13I","path":"/ts-searchParams","title":"SearchParams"}}},{"node":{"frontmatter":{"order":"13C","path":"/ts-theme-context","title":"ThemeContext"}}},{"node":{"frontmatter":{"order":"13H","path":"/ts-usebreedlist","title":"useBreedList"}}},{"node":{"frontmatter":{"order":"9G","path":"/usecallback","title":"useCallback"}}},{"node":{"frontmatter":{"order":"9C","path":"/usecontext","title":"useContext"}}},{"node":{"frontmatter":{"order":"9J","path":"/usedebugvalue","title":"useDebugValue"}}},{"node":{"frontmatter":{"order":"9B","path":"/useeffect-2","title":"useEffect"}}},{"node":{"frontmatter":{"order":"4C","path":"/useeffect","title":"useEffect"}}},{"node":{"frontmatter":{"order":"9I","path":"/useimperativehandle","title":"useImperativeHandle"}}},{"node":{"frontmatter":{"order":"9H","path":"/uselayouteffect","title":"useLayoutEffect"}}},{"node":{"frontmatter":{"order":"9F","path":"/usememo","title":"useMemo"}}},{"node":{"frontmatter":{"order":"9E","path":"/usereducer","title":"useReducer"}}},{"node":{"frontmatter":{"order":"9D","path":"/useref","title":"useRef"}}},{"node":{"frontmatter":{"order":"9A","path":"/usestate","title":"useState"}}}]}},"pageContext":{}},"staticQueryHashes":["2959687377"]}