{"data":{"site":{"siteMetadata":{"title":"Complete Intro to React","subtitle":"v6","description":"Brian Holt breaks down React into the most low level principles so that you can understand your whole stack, from front to back","keywords":["react","react.js","frontend masters","parcel","javascript","brian holt","js","front end","tailwind"]}},"allMarkdownRemark":{"edges":[{"node":{"id":"7698b529-ec07-5719-b066-7371a32a6646","frontmatter":{"order":"1A","path":"/intro","title":"Introduction","section":"Welcome","description":"Brian Holt introduces you to himself, the Complete Intro to React version 6, and what you can expect to learn"}}},{"node":{"id":"cda813d1-7d9d-5680-83a6-630a3629e0fc","frontmatter":{"order":"2A","path":"/pure-react","title":"Pure React","section":"No Frills React","description":"Brian teaches React without any frills: just you, some JavaScript, and the browser. No build step."}}},{"node":{"id":"c016ab0f-5b83-599f-a22e-ca4d4c0435eb","frontmatter":{"order":"2B","path":"/components","title":"Components","section":"No Frills React","description":"Brian teaches React without any frills: just you, some JavaScript, and the browser. No build step."}}},{"node":{"id":"c7b907e0-1c89-5cdd-9547-be7915e46c3c","frontmatter":{"order":"3A","path":"/npm","title":"npm","section":"JS Tools","description":"When putting any sort of JavaScript project together, npm is an essential tool. Brian talks about how to get started with npm."}}},{"node":{"id":"a45cf464-04f6-5083-bc77-253635d45a73","frontmatter":{"order":"3B","path":"/prettier","title":"Prettier","section":"JS Tools","description":"Brian talks about his favorite JS tool, Prettier, a tool that that helps you maintain consistent code style with no work on the dev's part."}}},{"node":{"id":"ce33ec6a-9cbb-566a-9205-88d67d57ac43","frontmatter":{"order":"3C","path":"/eslint","title":"ESLint","section":"JS Tools","description":"An essential part of maintaining a project a long time is discipline in coding standards and avoiding antipatterns. ESLint is a great tool that helps you do just that."}}},{"node":{"id":"d96f249c-4e16-59a2-aa1b-3595fc00905e","frontmatter":{"order":"3D","path":"/git","title":"Git","section":"JS Tools","description":"Git is a critical part of any JS project and Brian makes sure you have it set up."}}},{"node":{"id":"97566c6e-ebf9-544c-aa18-8b8d59f7ee98","frontmatter":{"order":"3E","path":"/parcel","title":"Parcel","section":"JS Tools","description":"Setting up a build process has historically been a big barrier to entry for most developers. Brian shows you how to set up Parcel which makes the whole process a breeze."}}},{"node":{"id":"01f7ca20-5ae1-5471-b227-2ec90429b9e2","frontmatter":{"order":"3F","path":"/babel","title":"Babel","section":"JS Tools","description":"Typically Parcel handles all of your Babel needs out-of-the-box but the pet app project needs one specific transformation. Brian demonstrates how to set up a new Babel configuration."}}},{"node":{"id":"582d8732-424d-5d23-b482-e15efece1a6a","frontmatter":{"order":"3G","path":"/browserlist","title":"Browserlist","section":"JS Tools","description":"Babel transforms your JS code from futuristic code to code that is understandable by older browsers. Via a package called browserslist (which Parcel installed for you) you can Babel what browsers to target."}}},{"node":{"id":"c2e1ab5d-bfa2-5bbd-8c8b-a5d5f891e570","frontmatter":{"order":"4A","path":"/jsx","title":"JSX","section":"Core React Concepts","description":"JSX is an essential part of writing React. Brian teaches you to leverage your newfound React knowledge and make it much easier to read with JSX"}}},{"node":{"id":"2673e18b-d4fb-58e3-9948-91bec8d07eb2","frontmatter":{"order":"4B","path":"/hooks","title":"Hooks","section":"Core React Concepts","description":"React manages view state through a mechanism called hooks. Brian teaches you how to use them as you build components."}}},{"node":{"id":"ee3ffbac-766e-57ca-9bd6-d793f2cffa1e","frontmatter":{"order":"4C","path":"/useeffect","title":"useEffect","section":"Core React Concepts","description":"useEffect is a criticl hook for React, allowing developers to do asynchronous actions like making HTTP requests"}}},{"node":{"id":"24b1e721-8968-540a-806a-9dcd7b50bed1","frontmatter":{"order":"4D","path":"/custom-hooks","title":"Custom Hooks","section":"Core React Concepts","description":"You can even make your own hooks! Brian shows how to extract logic out of a component to share a hook across components!"}}},{"node":{"id":"a6445499-19ef-55e8-96bb-f6bd4c15d2f3","frontmatter":{"order":"4E","path":"/handling-user-input","title":"Handling User Input","section":"Core React Concepts","description":"Brian shows how to wire up your app to work with users interacting with the site."}}},{"node":{"id":"70d6483b-4ee2-54f1-b28d-5fe8ace88bfe","frontmatter":{"order":"4F","path":"/component-composition","title":"Component Composition","section":"Core React Concepts","description":"One component should do one thing. Brian shows you how to break down bigger components into smaller components."}}}]}}}